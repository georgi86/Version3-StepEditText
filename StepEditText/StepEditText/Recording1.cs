///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace StepEditText
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("b83ca9c0-5cbd-4519-aed8-2e6fb34118ba", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the StepEditTextRepository repository.
        /// </summary>
        public static StepEditTextRepository repo = StepEditTextRepository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            bool bBigMode = true;

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.MeasureText' at Center.", repo.SnapXUntitled.MeasureTextInfo, new RecordItemIndex(0));
            repo.SnapXUntitled.MeasureText.MoveTo();
            Delay.Milliseconds(200);
            bBigMode = repo.SnapXUntitled.MeasureText.Visible;

            if (bBigMode)
            {
                repo.SnapXUntitled.TitleBar.Click("510;10");
                Delay.Milliseconds(200);
            }
            else
            {
                repo.SnapXUntitled.SwitchToSensor.Click();
                Delay.Milliseconds(200);

                repo.SnapXUntitled.TitleBar.Click("510;10");
                Delay.Milliseconds(200);
            }                       
            
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LMenu}'.", new RecordItemIndex(3));
            Keyboard.Press("{LMenu}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'F'.", new RecordItemIndex(4));
            Keyboard.Press("F");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'O'.", new RecordItemIndex(5));
            Keyboard.Press("O");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(6));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'C:\\JORO\\AUTOMATIONS\\GIT_Automations\\VERSION 3\\AutomationStepEditText\\Routine\\RoutineOne.mxy'.", new RecordItemIndex(7));
            Keyboard.Press("C:\\JORO\\AUTOMATIONS\\GIT_Automations\\VERSION 3\\AutomationStepEditText\\Routine\\RoutineOne.mxy");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}'.", new RecordItemIndex(8));
            Keyboard.Press("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(9));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.TitleBar' at Center.", repo.SnapXUntitled.TitleBarInfo, new RecordItemIndex(10));
            repo.SnapXUntitled.TitleBar.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LMenu}'.", new RecordItemIndex(11));
            Keyboard.Press("{LMenu}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'E'.", new RecordItemIndex(12));
            Keyboard.Press("E");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'S'.", new RecordItemIndex(13));
            Keyboard.Press("S");
            Delay.Milliseconds(0);
            
            
            try
            {
                Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXRoutineOneMxy.TitleText' at Center.", repo.SnapXRoutineOneMxy.TitleTextInfo, new RecordItemIndex(14));
                repo.SnapXRoutineOneMxy.TitleText.MoveTo();
                Delay.Milliseconds(200);

                string strTitleText = repo.SnapXRoutineOneMxy.TitleText.TextValue;
                string strHardcodedTitleText = " Step Edit Routine";
                UtilityRun.InspectText(strTitleText, strHardcodedTitleText);
                Delay.Milliseconds(200);
            }
            catch (Exception ex)
            {
               
            }

            try
            {
                Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXRoutineOneMxy.PromptText' at Center.", repo.SnapXRoutineOneMxy.PromptTextInfo, new RecordItemIndex(15));
                repo.SnapXRoutineOneMxy.PromptText.MoveTo();
                Delay.Milliseconds(200);

                string strPromptText = repo.SnapXRoutineOneMxy.PromptText.TextValue;
                string strHardcodedPromptText = "Set XYZ origin location and skew\nalignment, then press OK to step\nedit the routine.";
                UtilityRun.InspectText(strPromptText, strHardcodedPromptText);
                Delay.Milliseconds(200);
            }
            catch (Exception ex)
            {

            }

            try
            {
                Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXRoutineOneMxy.StartAtStepText' at Center.", repo.SnapXRoutineOneMxy.StartAtStepTextInfo, new RecordItemIndex(16));
                repo.SnapXRoutineOneMxy.StartAtStepText.MoveTo();
                Delay.Milliseconds(200);

                string strStartText = repo.SnapXRoutineOneMxy.StartAtStepText.TextValue;
                string strHardcodedStartText = "Start at Step";
                UtilityRun.InspectText(strStartText, strHardcodedStartText);
                Delay.Milliseconds(200);
            }
            catch (Exception ex)
            {

            }

            try
            {
                Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXRoutineOneMxy.EndAtStepText' at Center.", repo.SnapXRoutineOneMxy.EndAtStepTextInfo, new RecordItemIndex(17));
                repo.SnapXRoutineOneMxy.EndAtStepText.MoveTo();
                Delay.Milliseconds(200);

                string strEndText = repo.SnapXRoutineOneMxy.EndAtStepText.TextValue;
                string strHardcodedEndText = "End at Step";
                UtilityRun.InspectText(strEndText, strHardcodedEndText);
                Delay.Milliseconds(200);
            }
            catch (Exception ex)
            {

            }                                   
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXRoutineOneMxy.ButtonOK' at Center.", repo.SnapXRoutineOneMxy.ButtonOKInfo, new RecordItemIndex(19));
            repo.SnapXRoutineOneMxy.ButtonOK.Click();
            Delay.Milliseconds(200);

            Thread.Sleep(4000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'o'.", new RecordItemIndex(21));
            Keyboard.Press("o");
            Delay.Milliseconds(0);

            try
            {
                Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXRoutineOneMxy.Finish' at Center.", repo.SnapXRoutineOneMxy.FinishInfo, new RecordItemIndex(22));
                repo.SnapXRoutineOneMxy.Finish.Click();
                Delay.Milliseconds(200);
            }
            catch (Exception ex)
            {

            }
            
            
            Keyboard.Press("{LMenu}");
            Delay.Milliseconds(200);

            Keyboard.Press("f");
            Delay.Milliseconds(200);

            Keyboard.Press("n");
            Delay.Milliseconds(200);

            try
            {
                Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SNAPX.SNAPX' at 28;6.", repo.SNAPX.SNAPXInfo, new RecordItemIndex(23));
                repo.SNAPX.SNAPX.MoveTo("28;6");
                Delay.Milliseconds(200);

                string strNewPromptTitle = repo.SNAPX.SNAPX.Text;
                string strHardcodedNewPromptTitle = "SNAP-X";
                UtilityRun.InspectText(strNewPromptTitle, strHardcodedNewPromptTitle);
                Delay.Milliseconds(200);
            }
            catch (Exception ex)
            {

            }

            try
            {
                Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SNAPX.SaveChangesText' at 92;7.", repo.SNAPX.SaveChangesTextInfo, new RecordItemIndex(24));
                repo.SNAPX.SaveChangesText.MoveTo("92;7");
                Delay.Milliseconds(200);

                string strNewPromptText = repo.SNAPX.SaveChangesText.TextValue;
                string strHardcodedNewPromptText = "Save changes to RoutineOne.mxy?";
                UtilityRun.InspectText(strNewPromptText, strHardcodedNewPromptText);
                Delay.Milliseconds(200);
            }
            catch (Exception ex)
            {

            }            

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'n'.", new RecordItemIndex(25));
            Keyboard.Press("n");
            Delay.Milliseconds(0);

            Thread.Sleep(5000);
            
            
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
